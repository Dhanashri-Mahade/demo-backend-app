name: 🚀 Deploy Spring Boot App to GCP (Cloud + VPS)

on:
  push:
    branches: [main]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v3

      - name: ☕ Set up JDK 19
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '19'

      - name: 🛠 Build Spring Boot JAR
        run: mvn clean package

      - name: 🏷️ Generate .env.production with version info
        id: versioning
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
          echo "version=$COMMIT_HASH" > .env.production
          echo "timestamp=$TIMESTAMP" >> .env.production
          echo "VERSION=$COMMIT_HASH-$TIMESTAMP" >> $GITHUB_ENV

      - name: 📁 Rename JAR with version
        run: |
          mkdir dist
          cp target/*.jar dist/backend-${{ env.VERSION }}.jar
          cp .env.production dist/

      - name: ☁️ Upload to GCP Backup Bucket
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: dist/
          destination: ${{ secrets.GCP_BUCKET_BACKUP }}
          credentials: ${{ secrets.GCP_SA_KEY_JSON }}

      - name: ☁️ Upload to GCP Current Bucket
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: dist/
          destination: ${{ secrets.GCP_BUCKET_CURRENT }}
          credentials: ${{ secrets.GCP_SA_KEY_JSON }}

      - name: 📂 Copy Files to VPS via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.GCP_VPS_HOST }}
          username: ${{ secrets.GCP_VPS_USER }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          source: "dist/*"
          target: "~/app"

      - name: 🔁 Restart Spring Boot App on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCP_VPS_HOST }}
          username: ${{ secrets.GCP_VPS_USER }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            cd ~/app
            echo "✅ Deploying backend-${{ env.VERSION }}.jar"
            pkill -f 'java -jar' || echo "⚠️ No process found, starting fresh."
            nohup java -jar backend-${{ env.VERSION }}.jar --spring.config.location=.env.production > app.log 2>&1 &
            echo "✅ App restarted with version: ${{ env.VERSION }}"
