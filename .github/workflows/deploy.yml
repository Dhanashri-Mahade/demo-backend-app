name: 🚀 Deploy Spring Boot App to GCP VPS

on:
  push:
    branches: [main]

jobs:
  build-upload-deploy:
    runs-on: ubuntu-latest

    env:
      VERSION: backend-${{ github.sha::7 }}-${{ github.run_started_at }}

    steps:
      # Step 1: Checkout code
      - name: 📦 Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Java
      - name: ☕ Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Build JAR
      - name: 🛠️ Build Spring Boot JAR
        run: |
          mvn clean package -DskipTests
          mkdir -p dist
          cp target/*.jar dist/${{ env.VERSION }}.jar

      # Step 4: Create .env.production with version info
      - name: 📝 Generate .env.production
        run: |
          echo "APP_VERSION=${{ env.VERSION }}" > dist/.env.production

      # Step 5: Authenticate to Google Cloud
      - name: 🔐 Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_JSON }}

      # Step 6: Upload JAR and .env to BACKUP bucket
      - name: ☁️ Upload to GCS Backup Bucket
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: dist/
          destination: ${{ secrets.GCP_BUCKET_BACKUP }}/dist
          parent: false
          process_gcloudignore: false

      # Step 7: Upload JAR and .env to CURRENT bucket
      - name: ☁️ Upload to GCS Current Bucket
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: dist/
          destination: ${{ secrets.GCP_BUCKET_CURRENT }}/dist
          parent: false
          process_gcloudignore: false

      # Step 8: Set up SSH key for VPS access
      - name: 🔑 Set up SSH for VPS
        run: |
          echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      # Step 9: SSH into VPS and deploy
      - name: 🚀 Deploy to GCP VPS
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.GCP_VPS_USER }}@${{ secrets.GCP_VPS_HOST }} << 'EOF'
            set -e
            echo "📁 Making app directory"
            mkdir -p ~/springboot-app/dist

            echo "⬇️ Downloading JAR and .env from GCS"
            gsutil cp gs://${{ secrets.GCP_BUCKET_CURRENT }}/dist/*.jar ~/springboot-app/dist/app.jar
            gsutil cp gs://${{ secrets.GCP_BUCKET_CURRENT }}/dist/.env.production ~/springboot-app/dist/.env.production

            echo "🔁 Restarting application (simple kill & run)"
            pkill -f 'java -jar' || true
            nohup java -jar ~/springboot-app/dist/app.jar --spring.config.location=file:~/springboot-app/dist/.env.production > ~/springboot-app/app.log 2>&1 &
            echo "✅ Deployment Complete"
          EOF
