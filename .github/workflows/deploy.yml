name: üöÄ Upload the Jar file on Github Branch

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [closed]
  workflow_dispatch:

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      start_time: ${{ steps.ctx.outputs.start_time }}
      trigger_type: ${{ steps.ctx.outputs.trigger_type }}
    steps:
      - name: üïí Set START_TIME and TRIGGER_TYPE
        id: ctx
        shell: bash
        run: |
          START_TIME=$(TZ=Asia/Kolkata date +"%d-%m-%Y %H:%M")
          EVENT="${{ github.event_name }}"
          if [ "$EVENT" = "push" ]; then
            TRIGGER_TYPE="push"
          elif [ "$EVENT" = "workflow_dispatch" ]; then
            TRIGGER_TYPE="manual trigger"
          elif [ "$EVENT" = "pull_request" ] && [ "${{ github.event.pull_request.merged || false }}" = "true" ]; then
            TRIGGER_TYPE="merge"
          else
            TRIGGER_TYPE="$EVENT"
          fi
          echo "start_time=$START_TIME" >> $GITHUB_OUTPUT
          echo "trigger_type=$TRIGGER_TYPE" >> $GITHUB_OUTPUT

  build-backup-deploy:
    needs: init
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    outputs:
      old_filename: ${{ steps.export_ctx.outputs.old_filename }}
      error_step: ${{ steps.capture_failure.outputs.error_step }}
    steps:
      - name: üì¶ Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: echo "STEP_NAME=üì¶ Checkout Repository" >> $GITHUB_ENV

      - name: ‚òï Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: "19"
          distribution: "temurin"
      - run: echo "STEP_NAME=‚òï Set up JDK 19" >> $GITHUB_ENV

      - name: üõ† Build JAR using Maven
        run: |
          echo "STEP_NAME=üõ† Build JAR using Maven" >> $GITHUB_ENV
          mvn clean package -X
          ls -la target/

      - name: üîç Verify JAR file
        run: |
          echo "STEP_NAME=üîç Verify JAR file" >> $GITHUB_ENV
          if [ ! -f target/*.jar ]; then
            echo "Error: No JAR file found"
            exit 1
          fi
          echo "JAR_FILE=$(ls target/*.jar)" >> $GITHUB_ENV

      - name: üìÇ Prepare backup branch and rename old JAR
        run: |
          echo "STEP_NAME=üìÇ Prepare backup branch" >> $GITHUB_ENV
          git fetch origin
          git checkout backup || git checkout -b backup
          if [ -f "MyBOQ.jar" ] && [ -f ".env.production" ]; then
            OLD_DATE=$(grep '^date=' .env.production | cut -d'=' -f2)
            if [ -n "$OLD_DATE" ]; then
              OLD_FILENAME="MyBOQ_${OLD_DATE}.jar"
              mv MyBOQ.jar "${OLD_FILENAME}"
              git add "${OLD_FILENAME}"
              echo "OLD_FILENAME=${OLD_FILENAME}" >> $GITHUB_ENV
            fi
          fi

      - name: üè∑ Create new .env.production
        run: |
          echo "STEP_NAME=üè∑ Create new .env.production" >> $GITHUB_ENV
          TODAY=$(date +"%Y-%m-%d")
          COMMIT_HASH=$(git rev-parse --short HEAD)
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
          echo "date=$TODAY" > .env.production
          echo "version=$COMMIT_HASH" >> .env.production
          echo "timestamp=$TIMESTAMP" >> .env.production

      - name: üì¶ Add new MyBOQ.jar
        run: |
          echo "STEP_NAME=üì¶ Add new MyBOQ.jar" >> $GITHUB_ENV
          cp "${{ env.JAR_FILE }}" MyBOQ.jar
          git add MyBOQ.jar .env.production

      - name: üîÅ Commit and push
        run: |
          echo "STEP_NAME=üîÅ Commit and push" >> $GITHUB_ENV
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git commit -m "üîÅ Backup updated - $(date +"%Y-%m-%d %H:%M:%S")" || true
          git push origin backup --force

      - name: üßæ Export notification context
        id: export_ctx
        if: always()
        run: echo "old_filename=${OLD_FILENAME:-}" >> $GITHUB_OUTPUT

      - name: üö® Capture failure step name
        id: capture_failure
        if: failure()
        run: echo "error_step=${STEP_NAME:-Unknown}" >> $GITHUB_OUTPUT

  notify-success:
    needs: [init, build-backup-deploy]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Get End Time
        id: get_end_time
        run: echo "end_time=$(TZ=Asia/Kolkata date '+%d-%m-%Y %H:%M')" >> $GITHUB_OUTPUT

      - name: üìß Send success email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.titan.email
          server_port: 465
          secure: true
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "MyBOQ App Workflow - SUCCESS ‚úÖ"
          from: "MyBOQ Workflow <${{ secrets.SMTP_USERNAME }}>"
          to: "dhanashrimahade@gmail.com"
          content_type: text/html 
          body: |
            <html>
              <body style="font-family: Arial, Helvetica, sans-serif; color:#1f2937; background:#f9fafb; padding:16px;">
                <div style="max-width:640px; margin:0 auto; background:#ffffff; border:1px solid #e5e7eb; border-radius:12px; overflow:hidden;">
                  <div style="background:#10b981; color:#ffffff; padding:16px 20px;">
                    <h2 style="margin:0; font-size:20px;">üì¢ MyBOQ App Workflow Notification</h2>
                    <div style="font-size:13px; opacity:0.95;">Status: <strong>‚úÖ SUCCESS</strong></div>
                  </div>

                  <div style="padding:20px;">
                    <p style="margin:0 0 12px;">Your workflow has been started for <strong>MyBOQ App</strong>.</p>

                    <table cellpadding="0" cellspacing="0" style="width:100%; border-collapse:collapse; font-size:14px;">
                      <tr>
                        <td style="padding:6px 0; width:140px; color:#6b7280;">Trigger Type:</td>
                        <td style="padding:6px 0;"><strong>${{ needs.init.outputs.trigger_type }}</strong></td>
                      </tr>
                      <tr>
                        <td style="padding:6px 0; color:#6b7280;">Start Time:</td>
                        <td style="padding:6px 0;"><strong>${{ needs.init.outputs.start_time }}</strong></td>
                      </tr>
                      <tr>
                        <td style="padding:6px 0; color:#6b7280;">End Time:</td>
                        <td style="padding:6px 0;"><strong>${{ steps.get_end_time.outputs.end_time }}</strong></td>
                      </tr>
                    </table>

                    <div style="height:1px; background:#e5e7eb; margin:16px 0;"></div>

                    <p style="margin:0 0 8px;"><strong>Files updated in backup branch:</strong></p>
                    <ol style="margin:0 0 12px 20px; padding:0; line-height:1.6;">
                      <li><code style="background:#f3f4f6; padding:2px 6px; border-radius:6px;">MyBOQ.jar</code></li>
                      ${{ needs.build-backup-deploy.outputs.old_filename && format('<li><code style="background:#f3f4f6; padding:2px 6px; border-radius:6px;">{0}</code></li><li><code style="background:#f3f4f6; padding:2px 6px; border-radius:6px;">.env.production</code></li>', needs.build-backup-deploy.outputs.old_filename) || '<li><code style="background:#f3f4f6; padding:2px 6px; border-radius:6px;">.env.production</code></li>' }}
                    </ol>

                    <p style="margin:0 0 6px;"><strong>Path:</strong></p>
                    <p style="margin:0 0 14px;">
                      <a href="https://github.com/Dhanashri-Mahade/demo-backend-app/blob/backup/" style="color:#2563eb; text-decoration:none;">
                        Click here to check where the JAR &amp; env files were uploaded ‚Üí
                      </a>
                    </p>
                  </div>

                  <div style="background:#f3f4f6; padding:12px 16px; font-size:12px; color:#6b7280; text-align:center;">
                    Powered by <strong>GitHub Actions</strong> üöÄ
                  </div>
                </div>
              </body>
            </html>

  notify-failure:
    needs: [init, build-backup-deploy]
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: üìß Send failure email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.titan.email
          server_port: 465
          secure: true
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "MyBOQ App Workflow - FAILED ‚ùå"
          from: "MyBOQ Workflow <${{ secrets.SMTP_USERNAME }}>"
          to: "dhanashri.mahade@siliconmount.com"
          body: |
            ‚ö†Ô∏è MyBOQ App Workflow Alert

            Your workflow for MyBOQ App has FAILED ‚ùå

            Trigger Type: ${{ needs.init.outputs.trigger_type }}
            Start Time: ${{ needs.init.outputs.start_time }}
            Error Step: ${{ needs.build-backup-deploy.outputs.error_step }}

            üìÑ Check Logs:  
            https://github.com/Dhanashri-Mahade/demo-backend-app/actions

            ---
            _Powered by GitHub Actions üöÄ ‚Äì Ensuring transparency in every build_

