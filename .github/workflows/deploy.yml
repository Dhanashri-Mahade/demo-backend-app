name: 🚀 Upload the Jar file on Github Branch

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [closed]
  workflow_dispatch: # Adds manual trigger 

jobs:
  build-backup-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write 
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

    steps:
      # Step 1: Checkout main branch code
      - name: 📦 Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 2: Setup JDK for Maven build
      - name: ☕ Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: "19"
          distribution: "temurin"

      # Step 3: Build JAR using Maven
      - name: 🛠 Build JAR using Maven
        run: |
          mvn clean package -X
          ls -la target/

      # Step 4: Verify JAR file exists
      - name: 🔍 Verify JAR file
        run: |
          if [ ! -f target/*.jar ]; then
            echo "Error: No JAR file found in target/"
            exit 1
          fi
          JAR_FILE=$(ls target/*.jar)
          echo "Found JAR: $JAR_FILE"
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

      # Step 5: Prepare backup branch and rename old JAR if exists
      - name: 📂 Prepare backup branch and rename old JAR if exists
        run: |
          git fetch origin
          git checkout backup || git checkout -b backup

          if [ -f "MyBOQ.jar" ] && [ -f ".env.production" ]; then
            OLD_DATE=$(grep '^date=' .env.production | cut -d'=' -f2)
            if [ ! -z "$OLD_DATE" ]; then
              echo "Renaming old MyBOQ.jar to ${OLD_DATE}.jar"
              mv MyBOQ.jar "${OLD_DATE}.jar"
              git add "${OLD_DATE}.jar"
            fi
          fi

      # Step 6: Generate new .env.production with date, version, timestamp
      - name: 🏷 Create new .env.production
        run: |
          TODAY=$(date +"%Y-%m-%d")
          COMMIT_HASH=$(git rev-parse --short HEAD)
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
          
          echo "date=$TODAY" > .env.production
          echo "version=$COMMIT_HASH" >> .env.production
          echo "timestamp=$TIMESTAMP" >> .env.production

      # Step 7: Copy and rename new JAR to MyBOQ.jar
      - name: 📦 Add new MyBOQ.jar
        run: |
          cp "${{ env.JAR_FILE }}" MyBOQ.jar
          git add MyBOQ.jar .env.production

      # Step 8: Commit and push to backup branch
      - name: 🔁 Commit and push changes to backup branch
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git commit -m "🔁 Backup updated - $(date +"%Y-%m-%d %H:%M:%S")" || echo "Nothing to commit"
          git push origin backup --force
