name: 🚀 Deploy Spring Boot App to GCP VPS

on:
  push:
    branches: [main]

jobs:
  build-backup-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: 📦 Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Setup JDK for Maven build
      - name: ☕ Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'

      # Step 3: Build JAR using Maven
      - name: 🛠 Build JAR using Maven
        run: |
          mvn clean package -X  # -X for debug output
          ls -la target/  # List contents of target/ to verify JAR

      # Step 4: Verify JAR file exists
      - name: 🔍 Verify JAR file
        run: |
          if [ ! -f target/*.jar ]; then
            echo "Error: No JAR file found in target/"
            exit 1
          fi
          JAR_FILE=$(ls target/*.jar)
          echo "Found JAR: $JAR_FILE"
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

      # Step 5: Generate version info and .env.production
      - name: 🏷 Create .env.production with version info
        id: versioning
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
          VERSION="$COMMIT_HASH-$TIMESTAMP"
          echo "version=$COMMIT_HASH" > .env.production
          echo "timestamp=$TIMESTAMP" >> .env.production
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Step 6: Authenticate gcloud using service account key
      - name: 🔐 Set up gcloud auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY_JSON }}'

      # Step 7: Set up gcloud SDK
      - name: 🛠 Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: qwiklabs-gcp-00-3e843e9d43d6

      # Step 8: Upload JAR to GCS Current Bucket
      - name: ☁ Upload JAR to GCS Current Bucket
        run: |
          gsutil cp ${{ env.JAR_FILE }} gs://${{ secrets.GCP_BUCKET_CURRENT }}/app.jar

      # Step 9: Upload .env.production to GCS Current Bucket
      - name: ☁ Upload .env.production to GCS Current Bucket
        run: |
          gsutil cp .env.production gs://${{ secrets.GCP_BUCKET_CURRENT }}/.env.production

      # Step 10: Upload JAR to GCS Backup Bucket
      - name: ☁ Upload JAR to GCS Backup Bucket
        run: |
          gsutil cp ${{ env.JAR_FILE }} gs://${{ secrets.GCP_BUCKET_BACKUP }}/backend-${{ env.VERSION }}.jar

      # Step 11: Deploy to GCP VPS via SSH
      - name: 🚀 Deploy on GCP VPS via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCP_VPS_HOST }}
          username: ${{ secrets.GCP_VPS_USER }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            echo "📁 Moving to app directory..."
            mkdir -p ~/app
            cd ~/app

            echo "📦 Stopping old app if running..."
            pkill -f 'java -jar' || echo "App was not running."

            echo "🧹 Cleaning old .jar and .env.production..."
            rm -f app.jar .env.production

            echo "⬇️ Downloading new .jar and .env.production from GCS..."
            gcloud storage cp gs://${{ secrets.GCP_BUCKET_CURRENT }}/app.jar app.jar
            gcloud storage cp gs://${{ secrets.GCP_BUCKET_CURRENT }}/.env.production .

            echo "🚀 Starting new app..."
            nohup java -jar app.jar > output.log 2>&1 &